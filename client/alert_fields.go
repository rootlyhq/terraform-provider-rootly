// DO NOT MODIFY: This file is generated by tools/generate.js. Any changes will be overwritten during the next build.

package client

import (
	"fmt"
	"reflect"

	"github.com/google/jsonapi"
	rootlygo "github.com/rootlyhq/terraform-provider-rootly/v2/schema"
)

type AlertField struct {
	ID   string `jsonapi:"primary,alert_fields"`
	Slug string `jsonapi:"attr,slug,omitempty"`
	Name string `jsonapi:"attr,name,omitempty"`
	Kind string `jsonapi:"attr,kind,omitempty"`
}

func (c *Client) ListAlertFields(params *rootlygo.ListAlertFieldsParams) ([]interface{}, error) {
	req, err := rootlygo.NewListAlertFieldsRequest(c.Rootly.Server, params)
	if err != nil {
		return nil, fmt.Errorf("Error building request: %w", err)
	}

	resp, err := c.Do(req)
	if err != nil {
		return nil, fmt.Errorf("Failed to make request: %w", err)
	}

	alert_fields, err := jsonapi.UnmarshalManyPayload(resp.Body, reflect.TypeOf(new(AlertField)))
	resp.Body.Close()
	if err != nil {
		return nil, fmt.Errorf("Error unmarshaling: %w", err)
	}

	return alert_fields, nil
}

func (c *Client) CreateAlertField(d *AlertField) (*AlertField, error) {
	buffer, err := MarshalData(d)
	if err != nil {
		return nil, fmt.Errorf("Error marshaling alert_field: %w", err)
	}

	req, err := rootlygo.NewCreateAlertFieldRequestWithBody(c.Rootly.Server, c.ContentType, buffer)
	if err != nil {
		return nil, fmt.Errorf("Error building request: %w", err)
	}
	resp, err := c.Do(req)
	if err != nil {
		return nil, fmt.Errorf("Failed to perform request to create alert_field: %s", err)
	}

	data, err := UnmarshalData(resp.Body, new(AlertField))
	resp.Body.Close()
	if err != nil {
		return nil, fmt.Errorf("Error unmarshaling alert_field: %w", err)
	}

	return data.(*AlertField), nil
}

func (c *Client) GetAlertField(id string) (*AlertField, error) {
	req, err := rootlygo.NewGetAlertFieldRequest(c.Rootly.Server, id)
	if err != nil {
		return nil, fmt.Errorf("Error building request: %w", err)
	}

	resp, err := c.Do(req)
	if err != nil {
		return nil, fmt.Errorf("Failed to make request to get alert_field: %w", err)
	}

	data, err := UnmarshalData(resp.Body, new(AlertField))
	resp.Body.Close()
	if err != nil {
		return nil, fmt.Errorf("Error unmarshaling alert_field: %w", err)
	}

	return data.(*AlertField), nil
}

func (c *Client) UpdateAlertField(id string, alert_field *AlertField) (*AlertField, error) {
	buffer, err := MarshalData(alert_field)
	if err != nil {
		return nil, fmt.Errorf("Error marshaling alert_field: %w", err)
	}

	req, err := rootlygo.NewUpdateAlertFieldRequestWithBody(c.Rootly.Server, id, c.ContentType, buffer)
	if err != nil {
		return nil, fmt.Errorf("Error building request: %w", err)
	}
	resp, err := c.Do(req)
	if err != nil {
		return nil, fmt.Errorf("Failed to make request to update alert_field: %w", err)
	}

	data, err := UnmarshalData(resp.Body, new(AlertField))
	resp.Body.Close()
	if err != nil {
		return nil, fmt.Errorf("Error unmarshaling alert_field: %w", err)
	}

	return data.(*AlertField), nil
}

func (c *Client) DeleteAlertField(id string) error {
	req, err := rootlygo.NewDeleteAlertFieldRequest(c.Rootly.Server, id)
	if err != nil {
		return fmt.Errorf("Error building request: %w", err)
	}

	_, err = c.Do(req)
	if err != nil {
		return fmt.Errorf("Failed to make request to delete alert_field: %w", err)
	}

	return nil
}
