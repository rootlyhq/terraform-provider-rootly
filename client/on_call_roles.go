// DO NOT MODIFY: This file is generated by tools/generate.js. Any changes will be overwritten during the next build.

package client

import (
	"reflect"
	
	"github.com/pkg/errors"
	"github.com/google/jsonapi"
	rootlygo "github.com/rootlyhq/terraform-provider-rootly/v2/schema"
)

type OnCallRole struct {
	ID string `jsonapi:"primary,on_call_roles"`
	Name string `jsonapi:"attr,name,omitempty"`
  Slug string `jsonapi:"attr,slug,omitempty"`
  SystemRole string `jsonapi:"attr,system_role,omitempty"`
  AlertSourcesPermissions []interface{} `jsonapi:"attr,alert_sources_permissions,omitempty"`
  AlertUrgencyPermissions []interface{} `jsonapi:"attr,alert_urgency_permissions,omitempty"`
  AlertsPermissions []interface{} `jsonapi:"attr,alerts_permissions,omitempty"`
  ApiKeysPermissions []interface{} `jsonapi:"attr,api_keys_permissions,omitempty"`
  AuditsPermissions []interface{} `jsonapi:"attr,audits_permissions,omitempty"`
  ContactsPermissions []interface{} `jsonapi:"attr,contacts_permissions,omitempty"`
  EscalationPoliciesPermissions []interface{} `jsonapi:"attr,escalation_policies_permissions,omitempty"`
  GroupsPermissions []interface{} `jsonapi:"attr,groups_permissions,omitempty"`
  HeartbeatsPermissions []interface{} `jsonapi:"attr,heartbeats_permissions,omitempty"`
  IntegrationsPermissions []interface{} `jsonapi:"attr,integrations_permissions,omitempty"`
  InvitationsPermissions []interface{} `jsonapi:"attr,invitations_permissions,omitempty"`
  LiveCallRoutingPermissions []interface{} `jsonapi:"attr,live_call_routing_permissions,omitempty"`
  ScheduleOverridePermissions []interface{} `jsonapi:"attr,schedule_override_permissions,omitempty"`
  SchedulesPermissions []interface{} `jsonapi:"attr,schedules_permissions,omitempty"`
  ServicesPermissions []interface{} `jsonapi:"attr,services_permissions,omitempty"`
  WebhooksPermissions []interface{} `jsonapi:"attr,webhooks_permissions,omitempty"`
  WorkflowsPermissions []interface{} `jsonapi:"attr,workflows_permissions,omitempty"`
}

func (c *Client) ListOnCallRoles(params *rootlygo.ListOnCallRolesParams) ([]interface{}, error) {
	req, err := rootlygo.NewListOnCallRolesRequest(c.Rootly.Server, params)
	if err != nil {
		return nil, errors.Errorf("Error building request: %s", err.Error())
	}

	resp, err := c.Do(req)
	if err != nil {
		return nil, errors.Errorf("Failed to make request: %s", err.Error())
	}

	on_call_roles, err := jsonapi.UnmarshalManyPayload(resp.Body, reflect.TypeOf(new(OnCallRole)))
	resp.Body.Close()
	if err != nil {
		return nil, errors.Errorf("Error unmarshaling: %s", err.Error())
	}

	return on_call_roles, nil
}

func (c *Client) CreateOnCallRole(d *OnCallRole) (*OnCallRole, error) {
	buffer, err := MarshalData(d)
	if err != nil {
		return nil, errors.Errorf("Error marshaling on_call_role: %s", err.Error())
	}

	req, err := rootlygo.NewCreateOnCallRoleRequestWithBody(c.Rootly.Server, c.ContentType, buffer)
	if err != nil {
		return nil, errors.Errorf("Error building request: %s", err.Error())
	}
	resp, err := c.Do(req)
	if err != nil {
		return nil, errors.Errorf("Failed to perform request to create on_call_role: %s", err.Error())
	}

	data, err := UnmarshalData(resp.Body, new(OnCallRole))
	resp.Body.Close()
	if err != nil {
		return nil, errors.Errorf("Error unmarshaling on_call_role: %s", err.Error())
	}

	return data.(*OnCallRole), nil
}

func (c *Client) GetOnCallRole(id string) (*OnCallRole, error) {
	req, err := rootlygo.NewGetOnCallRoleRequest(c.Rootly.Server, id)
	if err != nil {
		return nil, errors.Errorf("Error building request: %s", err.Error())
	}

	resp, err := c.Do(req)
	if err != nil {
		return nil, errors.Errorf("Failed to make request to get on_call_role: %s", err.Error())
	}

	data, err := UnmarshalData(resp.Body, new(OnCallRole))
	resp.Body.Close()
	if err != nil {
		return nil, errors.Errorf("Error unmarshaling on_call_role: %s", err.Error())
	}

	return data.(*OnCallRole), nil
}

func (c *Client) UpdateOnCallRole(id string, on_call_role *OnCallRole) (*OnCallRole, error) {
	buffer, err := MarshalData(on_call_role)
	if err != nil {
		return nil, errors.Errorf("Error marshaling on_call_role: %s", err.Error())
	}

	req, err := rootlygo.NewUpdateOnCallRoleRequestWithBody(c.Rootly.Server, id, c.ContentType, buffer)
	if err != nil {
		return nil, errors.Errorf("Error building request: %s", err.Error())
	}
	resp, err := c.Do(req)
	if err != nil {
		return nil, errors.Errorf("Failed to make request to update on_call_role: %s", err.Error())
	}

	data, err := UnmarshalData(resp.Body, new(OnCallRole))
	resp.Body.Close()
	if err != nil {
		return nil, errors.Errorf("Error unmarshaling on_call_role: %s", err.Error())
	}

	return data.(*OnCallRole), nil
}

func (c *Client) DeleteOnCallRole(id string) error {
	req, err := rootlygo.NewDeleteOnCallRoleRequest(c.Rootly.Server, id)
	if err != nil {
		return errors.Errorf("Error building request: %s", err.Error())
	}

	_, err = c.Do(req)
	if err != nil {
		return errors.Errorf("Failed to make request to delete on_call_role: %s", err.Error())
	}

	return nil
}
